
; ncase and pcase have the last argument first, for ergonomics

(defn pcase [x p l a n] (PCASE p l a n x))
(defn ncase [x z p] (NCASE z p x))
(def inc INC)

(defn + [a b]
    (ncase a b (fn [a] (inc (+ a b)))))

(defn lcase [lst nil cons]
    (pcase lst
        (! nil)
        (! nil)
        cons
        (! nil)))

(def nil 0)

(defn zipWith [f one two]
    (lcase one
        nil
        (fn [a one]
            (lcase two
                nil
                (fn [b two]
                    ((f a b) (zipWith f one two)))))))

(defn drop [n lst]
    (ncase n
        lst
        (fn [n]
            (lcase lst lst
                (fn [a rest] (drop n rest))))))

(def fib (0 (1 (zipWith + fib (drop 1 fib)))))

(defn take [n lst]
    (ncase n nil (fn [n]
        (lcase lst
            nil
            (fn [head tail] (head (take n tail)))))))

(defn fibs [n] (take n fib))

(def main fibs)